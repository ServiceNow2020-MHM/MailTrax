<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_522137_mailtrax_mailtrax</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_522137_mailtrax_mailtrax">u_request_type=letter_approval^ORu_request_type=response_requested^EQ<item display_value="Letter Approval Request" endquery="false" field="u_request_type" goto="false" newquery="false" operator="=" or="false" value="letter_approval"/>
            <item display_value="Response Requested" endquery="false" field="u_request_type" goto="false" newquery="false" operator="=" or="true" value="response_requested"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>MailTrax When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

// Instantiate the MailTraxUtils class.  Call the appropriate method and pass 
// the u_when_needed value.
	var mtutils = new MailTraxUtils();
	var isPast = mtutils.isDatePast(current.u_when_needed);
	var isToday = mtutils.isDateToday(current.u_when_needed);

	
	// If the isDatePast method returns true, the date is in the past.
	if(isPast == true){
		gs.addErrorMessage("The When needed date cannot be in the past.");
		current.setAbortAction(true);
	}
	
	// if the isDateToday method returns true the When needed date is today 
	if(isToday == true){
		gs.addErrorMessage("The When needed date cannot be for today.");
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-01-07 18:30:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>55fe0ff12f212010a54a821df699b66a</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>MailTrax When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="MailTrax" source="x_522137_mailtrax">add2772e2f112010a54a821df699b60b</sys_package>
        <sys_policy/>
        <sys_scope display_value="MailTrax">add2772e2f112010a54a821df699b60b</sys_scope>
        <sys_update_name>sys_script_55fe0ff12f212010a54a821df699b66a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-02-19 21:58:25</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=55fe0ff12f212010a54a821df699b66a"/>
</record_update>
